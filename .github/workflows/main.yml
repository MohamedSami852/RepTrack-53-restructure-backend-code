name: Build and Deploy to Azure

on:
  push:
    branches:
      - elnaggar
 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      # step 3 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1


      # Step 3: Log in to Azure Container Registry
      - name: Log in to ACR
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login reptrack.azurecr.io -u "${{ secrets.ACR_USERNAME }}" --password-stdin
      
      # Step 1: Build the Docker image locally
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg SMTP_EMAIL=${{ secrets.SMTP_EMAIL }} \
            --build-arg SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} \
            --build-arg SUPABASE_KEY=${{ secrets.SUPABASE_KEY }} \
            --build-arg SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
            -t reptrack.azurecr.io/django-app:latest .
      
      # Step 2: Verify local image exists
      - name: Verify Local Image Exists
        run: docker images | grep reptrack.azurecr.io/django-app
      
      # Step 3: Run the container using the local image
      - name: Run Docker Container
        run: |
          docker run -d \
            -e SMTP_EMAIL=${{ secrets.SMTP_EMAIL }} \
            -e SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} \
            -e SUPABASE_KEY=${{ secrets.SUPABASE_KEY }} \
            -e SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
            -p 8000:8000 \
            --name django-app \
            reptrack.azurecr.io/django-app:latest
      
      # Step 4: Optional health check
      - name: Health Check
        run: |
          sleep 10
          curl --fail http://localhost:8000/ || (docker logs django-app && exit 1)
      
      # Step 5: Cleanup
      - name: Stop and Remove Container
        run: |
          docker stop django-app
          docker rm django-app

      # Step 6: Push the Docker image to ACR
      - name: Push Docker image
        run: docker push reptrack.azurecr.io/django-app:latest

      # Step 7: Deploy the Docker image to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: Reptrack-production
          images: reptrack.azurecr.io/django-app:latest
          
